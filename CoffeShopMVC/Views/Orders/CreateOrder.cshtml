@model CoffeShopMVC.Dal.Order
@using CoffeShopMVC.Models
@using CoffeShopMVC.Dal
@{
    ViewBag.Title = "CreateOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
    OrderDal db = new OrderDal();
    List<Order> orders = db.Orders.ToList();
}

<h2>CreateOrder</h2>
<head>
    <style>
        .square {
            position: relative;
            top: 18px;
            height: 50px;
            width: 50px;
            background-color: green;
            margin: 20px 0 0 0;
            display: inline-block;
            border-radius:15px;
        }

        .table {
            margin: 30px;
            display: inline;
            padding: 25px;
        }

        .door {
            border: 9px solid red;
            padding-bottom: 50px;
            border-radius: 16px;
        }

        span {
            font-size: 20px;
        }
    </style>
</head>

@using (Html.BeginForm("Create1", "Orders", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.username)
        @Html.HiddenFor(model => model.productId)
        @Html.HiddenFor(model => model.price)

        <div class="form-group">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.username)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.productId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.price)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.seat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.seat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.seat, "", new { @class = "text-danger" })
            </div>
            <h4>@ViewBag.m</h4>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div class="door">
@for (int i = 1; i <= 10; i++)
{
    int count = 0;
    foreach(Order o in orders)
    {
        if(o.seat == i)
        {
            count++;
        }
    }
<div class="table">
    @if (count == 0)
    {
        <span style="color:forestgreen">  @i  </span>
    }
    else
    { 
        <span style="color:red; text-decoration:line-through;">  @i  </span>
    }
    @{ 
        i = i + 1;
    }
    <div class="square"></div>

    @{ 
        count = 0;
        foreach (Order o in orders)
        {
            if (o.seat == i)
            {
                count++;
            }
        }
    }
    @if (count == 0)
    {
        <span style="color:forestgreen">  @i  </span>
    }
    else
    { 
        <span style="color: red; text-decoration: line-through;">  @i  </span>
    }
</div>
}
</div>
@for (int i = 11; i <= 19; i++)
{
    int count = 0;
    foreach(Order o in orders)
    {
        if(o.seat == i)
        {
            count++;
        }
    }
<div class="table">
    @if (count == 0)
    {
        <span style="color:green">  @i  </span>
    }
    else
    { 
        <span style="color: red; text-decoration: line-through;">  @i  </span>
    }
    @{ 
        i = i + 1;
    }
    <div class="square"></div>

    @{ 
        count = 0;
        foreach (Order o in orders)
        {
            if (o.seat == i)
            {
                count++;
            }
        }
    }
    @if (count == 0)
    {
        <span style="color: green;">  @i  </span>
    }
    else
    { 
        <span style="color: red; text-decoration: line-through;">  @i  </span>
    }
</div>
}







@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
